// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: protobufs/tee_time/tee_time.proto

package tee_time

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTeeTimeOverridesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId int64 `protobuf:"varint,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *GetTeeTimeOverridesRequest) Reset() {
	*x = GetTeeTimeOverridesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeeTimeOverridesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeeTimeOverridesRequest) ProtoMessage() {}

func (x *GetTeeTimeOverridesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeeTimeOverridesRequest.ProtoReflect.Descriptor instead.
func (*GetTeeTimeOverridesRequest) Descriptor() ([]byte, []int) {
	return file_protobufs_tee_time_tee_time_proto_rawDescGZIP(), []int{0}
}

func (x *GetTeeTimeOverridesRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type GetTeeTimeOverridesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Overrides []*TeeTimeOverride `protobuf:"bytes,1,rep,name=overrides,proto3" json:"overrides,omitempty"`
}

func (x *GetTeeTimeOverridesResponse) Reset() {
	*x = GetTeeTimeOverridesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeeTimeOverridesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeeTimeOverridesResponse) ProtoMessage() {}

func (x *GetTeeTimeOverridesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeeTimeOverridesResponse.ProtoReflect.Descriptor instead.
func (*GetTeeTimeOverridesResponse) Descriptor() ([]byte, []int) {
	return file_protobufs_tee_time_tee_time_proto_rawDescGZIP(), []int{1}
}

func (x *GetTeeTimeOverridesResponse) GetOverrides() []*TeeTimeOverride {
	if x != nil {
		return x.Overrides
	}
	return nil
}

type TeeTimeOverride struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId   int64  `protobuf:"varint,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	StartTime  string `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    string `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Occurrence int64  `protobuf:"varint,5,opt,name=occurrence,proto3" json:"occurrence,omitempty"`
	Date       string `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	Blocked    bool   `protobuf:"varint,7,opt,name=blocked,proto3" json:"blocked,omitempty"`
}

func (x *TeeTimeOverride) Reset() {
	*x = TeeTimeOverride{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeeTimeOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeeTimeOverride) ProtoMessage() {}

func (x *TeeTimeOverride) ProtoReflect() protoreflect.Message {
	mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeeTimeOverride.ProtoReflect.Descriptor instead.
func (*TeeTimeOverride) Descriptor() ([]byte, []int) {
	return file_protobufs_tee_time_tee_time_proto_rawDescGZIP(), []int{2}
}

func (x *TeeTimeOverride) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *TeeTimeOverride) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TeeTimeOverride) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *TeeTimeOverride) GetOccurrence() int64 {
	if x != nil {
		return x.Occurrence
	}
	return 0
}

func (x *TeeTimeOverride) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *TeeTimeOverride) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

type CreateTeeTimeScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId   int64  `protobuf:"varint,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Day        int64  `protobuf:"varint,2,opt,name=day,proto3" json:"day,omitempty"`
	StartTime  string `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    string `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Occurrence int64  `protobuf:"varint,5,opt,name=occurrence,proto3" json:"occurrence,omitempty"`
}

func (x *CreateTeeTimeScheduleRequest) Reset() {
	*x = CreateTeeTimeScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeeTimeScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeeTimeScheduleRequest) ProtoMessage() {}

func (x *CreateTeeTimeScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeeTimeScheduleRequest.ProtoReflect.Descriptor instead.
func (*CreateTeeTimeScheduleRequest) Descriptor() ([]byte, []int) {
	return file_protobufs_tee_time_tee_time_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTeeTimeScheduleRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *CreateTeeTimeScheduleRequest) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *CreateTeeTimeScheduleRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CreateTeeTimeScheduleRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *CreateTeeTimeScheduleRequest) GetOccurrence() int64 {
	if x != nil {
		return x.Occurrence
	}
	return 0
}

type CreateTeeTimeScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created bool `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *CreateTeeTimeScheduleResponse) Reset() {
	*x = CreateTeeTimeScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeeTimeScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeeTimeScheduleResponse) ProtoMessage() {}

func (x *CreateTeeTimeScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeeTimeScheduleResponse.ProtoReflect.Descriptor instead.
func (*CreateTeeTimeScheduleResponse) Descriptor() ([]byte, []int) {
	return file_protobufs_tee_time_tee_time_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTeeTimeScheduleResponse) GetCreated() bool {
	if x != nil {
		return x.Created
	}
	return false
}

type GetTeeTimeDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId  int64  `protobuf:"varint,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Datetime  string `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Available bool   `protobuf:"varint,3,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *GetTeeTimeDateRequest) Reset() {
	*x = GetTeeTimeDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeeTimeDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeeTimeDateRequest) ProtoMessage() {}

func (x *GetTeeTimeDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeeTimeDateRequest.ProtoReflect.Descriptor instead.
func (*GetTeeTimeDateRequest) Descriptor() ([]byte, []int) {
	return file_protobufs_tee_time_tee_time_proto_rawDescGZIP(), []int{5}
}

func (x *GetTeeTimeDateRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *GetTeeTimeDateRequest) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *GetTeeTimeDateRequest) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type GetTeeTimesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId  int64  `protobuf:"varint,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Date      string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Available bool   `protobuf:"varint,3,opt,name=available,proto3" json:"available,omitempty"`
	Golfers   int64  `protobuf:"varint,4,opt,name=golfers,proto3" json:"golfers,omitempty"`
}

func (x *GetTeeTimesRequest) Reset() {
	*x = GetTeeTimesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeeTimesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeeTimesRequest) ProtoMessage() {}

func (x *GetTeeTimesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeeTimesRequest.ProtoReflect.Descriptor instead.
func (*GetTeeTimesRequest) Descriptor() ([]byte, []int) {
	return file_protobufs_tee_time_tee_time_proto_rawDescGZIP(), []int{6}
}

func (x *GetTeeTimesRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *GetTeeTimesRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetTeeTimesRequest) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *GetTeeTimesRequest) GetGolfers() int64 {
	if x != nil {
		return x.Golfers
	}
	return 0
}

type GetTeeTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teetime *TeeTime `protobuf:"bytes,1,opt,name=teetime,proto3" json:"teetime,omitempty"`
}

func (x *GetTeeTimeResponse) Reset() {
	*x = GetTeeTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeeTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeeTimeResponse) ProtoMessage() {}

func (x *GetTeeTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeeTimeResponse.ProtoReflect.Descriptor instead.
func (*GetTeeTimeResponse) Descriptor() ([]byte, []int) {
	return file_protobufs_tee_time_tee_time_proto_rawDescGZIP(), []int{7}
}

func (x *GetTeeTimeResponse) GetTeetime() *TeeTime {
	if x != nil {
		return x.Teetime
	}
	return nil
}

type GetTeeTimesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teetimes []*TeeTime `protobuf:"bytes,1,rep,name=teetimes,proto3" json:"teetimes,omitempty"`
}

func (x *GetTeeTimesResponse) Reset() {
	*x = GetTeeTimesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeeTimesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeeTimesResponse) ProtoMessage() {}

func (x *GetTeeTimesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeeTimesResponse.ProtoReflect.Descriptor instead.
func (*GetTeeTimesResponse) Descriptor() ([]byte, []int) {
	return file_protobufs_tee_time_tee_time_proto_rawDescGZIP(), []int{8}
}

func (x *GetTeeTimesResponse) GetTeetimes() []*TeeTime {
	if x != nil {
		return x.Teetimes
	}
	return nil
}

type GetTeeTimeScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId int64  `protobuf:"varint,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Date     string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetTeeTimeScheduleRequest) Reset() {
	*x = GetTeeTimeScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeeTimeScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeeTimeScheduleRequest) ProtoMessage() {}

func (x *GetTeeTimeScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeeTimeScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetTeeTimeScheduleRequest) Descriptor() ([]byte, []int) {
	return file_protobufs_tee_time_tee_time_proto_rawDescGZIP(), []int{9}
}

func (x *GetTeeTimeScheduleRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *GetTeeTimeScheduleRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GeeTeeTimeScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule []*TeeTimeSchedule `protobuf:"bytes,1,rep,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *GeeTeeTimeScheduleResponse) Reset() {
	*x = GeeTeeTimeScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeeTeeTimeScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeeTeeTimeScheduleResponse) ProtoMessage() {}

func (x *GeeTeeTimeScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeeTeeTimeScheduleResponse.ProtoReflect.Descriptor instead.
func (*GeeTeeTimeScheduleResponse) Descriptor() ([]byte, []int) {
	return file_protobufs_tee_time_tee_time_proto_rawDescGZIP(), []int{10}
}

func (x *GeeTeeTimeScheduleResponse) GetSchedule() []*TeeTimeSchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type TeeTimeSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId   int64  `protobuf:"varint,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Day        int64  `protobuf:"varint,2,opt,name=day,proto3" json:"day,omitempty"`
	StartTime  string `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    string `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Occurrence int64  `protobuf:"varint,5,opt,name=occurrence,proto3" json:"occurrence,omitempty"`
}

func (x *TeeTimeSchedule) Reset() {
	*x = TeeTimeSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeeTimeSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeeTimeSchedule) ProtoMessage() {}

func (x *TeeTimeSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeeTimeSchedule.ProtoReflect.Descriptor instead.
func (*TeeTimeSchedule) Descriptor() ([]byte, []int) {
	return file_protobufs_tee_time_tee_time_proto_rawDescGZIP(), []int{11}
}

func (x *TeeTimeSchedule) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *TeeTimeSchedule) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *TeeTimeSchedule) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TeeTimeSchedule) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *TeeTimeSchedule) GetOccurrence() int64 {
	if x != nil {
		return x.Occurrence
	}
	return 0
}

type InvalidateCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId  int64  `protobuf:"varint,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Date      string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	BasePrice bool   `protobuf:"varint,3,opt,name=base_price,json=basePrice,proto3" json:"base_price,omitempty"`
}

func (x *InvalidateCacheRequest) Reset() {
	*x = InvalidateCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidateCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidateCacheRequest) ProtoMessage() {}

func (x *InvalidateCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidateCacheRequest.ProtoReflect.Descriptor instead.
func (*InvalidateCacheRequest) Descriptor() ([]byte, []int) {
	return file_protobufs_tee_time_tee_time_proto_rawDescGZIP(), []int{12}
}

func (x *InvalidateCacheRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *InvalidateCacheRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *InvalidateCacheRequest) GetBasePrice() bool {
	if x != nil {
		return x.BasePrice
	}
	return false
}

type InvalidateCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invalidated bool `protobuf:"varint,1,opt,name=invalidated,proto3" json:"invalidated,omitempty"`
}

func (x *InvalidateCacheResponse) Reset() {
	*x = InvalidateCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidateCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidateCacheResponse) ProtoMessage() {}

func (x *InvalidateCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidateCacheResponse.ProtoReflect.Descriptor instead.
func (*InvalidateCacheResponse) Descriptor() ([]byte, []int) {
	return file_protobufs_tee_time_tee_time_proto_rawDescGZIP(), []int{13}
}

func (x *InvalidateCacheResponse) GetInvalidated() bool {
	if x != nil {
		return x.Invalidated
	}
	return false
}

type TeeTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId      uint64  `protobuf:"varint,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Datetime      string  `protobuf:"bytes,3,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Price         float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	OriginalPrice float64 `protobuf:"fixed64,5,opt,name=original_price,json=originalPrice,proto3" json:"original_price,omitempty"`
	Discounted    bool    `protobuf:"varint,6,opt,name=discounted,proto3" json:"discounted,omitempty"`
	Available     bool    `protobuf:"varint,7,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *TeeTime) Reset() {
	*x = TeeTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeeTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeeTime) ProtoMessage() {}

func (x *TeeTime) ProtoReflect() protoreflect.Message {
	mi := &file_protobufs_tee_time_tee_time_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeeTime.ProtoReflect.Descriptor instead.
func (*TeeTime) Descriptor() ([]byte, []int) {
	return file_protobufs_tee_time_tee_time_proto_rawDescGZIP(), []int{14}
}

func (x *TeeTime) GetCourseId() uint64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *TeeTime) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *TeeTime) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TeeTime) GetOriginalPrice() float64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *TeeTime) GetDiscounted() bool {
	if x != nil {
		return x.Discounted
	}
	return false
}

func (x *TeeTime) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

var File_protobufs_tee_time_tee_time_proto protoreflect.FileDescriptor

var file_protobufs_tee_time_tee_time_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2f, 0x74, 0x65, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x2f, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x65, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x52, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x22, 0xb6,
	0x01, 0x0a, 0x0f, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x63, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f,
	0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x22, 0x39, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x6e, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x7d, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x6f, 0x6c, 0x66, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x67, 0x6f, 0x6c, 0x66, 0x65, 0x72, 0x73, 0x22, 0x41, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x07, 0x74, 0x65, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x54, 0x65,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x74, 0x65, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x44,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x74, 0x65, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x74, 0x65, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x65, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x22, 0x53, 0x0a, 0x1a, 0x47, 0x65, 0x65, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x54, 0x65,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x0f, 0x54, 0x65, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x22, 0x68, 0x0a, 0x16, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x3b,
	0x0a, 0x17, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x07,
	0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x32, 0xc7, 0x05, 0x0a, 0x0e,
	0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x2e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x65, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x23, 0x2e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x47, 0x65, 0x65, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x2f, 0x7b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x26, 0x2e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x65, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x65, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x8d, 0x01, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x65, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x2f, 0x7b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x0f, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x20,
	0x2e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x6d, 0x69, 0x65, 0x77, 0x68, 0x69, 0x74, 0x6e, 0x65, 0x79,
	0x2f, 0x66, 0x61, 0x69, 0x72, 0x77, 0x61, 0x79, 0x73, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2f, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobufs_tee_time_tee_time_proto_rawDescOnce sync.Once
	file_protobufs_tee_time_tee_time_proto_rawDescData = file_protobufs_tee_time_tee_time_proto_rawDesc
)

func file_protobufs_tee_time_tee_time_proto_rawDescGZIP() []byte {
	file_protobufs_tee_time_tee_time_proto_rawDescOnce.Do(func() {
		file_protobufs_tee_time_tee_time_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobufs_tee_time_tee_time_proto_rawDescData)
	})
	return file_protobufs_tee_time_tee_time_proto_rawDescData
}

var file_protobufs_tee_time_tee_time_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_protobufs_tee_time_tee_time_proto_goTypes = []interface{}{
	(*GetTeeTimeOverridesRequest)(nil),    // 0: tee_time.GetTeeTimeOverridesRequest
	(*GetTeeTimeOverridesResponse)(nil),   // 1: tee_time.GetTeeTimeOverridesResponse
	(*TeeTimeOverride)(nil),               // 2: tee_time.TeeTimeOverride
	(*CreateTeeTimeScheduleRequest)(nil),  // 3: tee_time.CreateTeeTimeScheduleRequest
	(*CreateTeeTimeScheduleResponse)(nil), // 4: tee_time.CreateTeeTimeScheduleResponse
	(*GetTeeTimeDateRequest)(nil),         // 5: tee_time.GetTeeTimeDateRequest
	(*GetTeeTimesRequest)(nil),            // 6: tee_time.GetTeeTimesRequest
	(*GetTeeTimeResponse)(nil),            // 7: tee_time.GetTeeTimeResponse
	(*GetTeeTimesResponse)(nil),           // 8: tee_time.GetTeeTimesResponse
	(*GetTeeTimeScheduleRequest)(nil),     // 9: tee_time.GetTeeTimeScheduleRequest
	(*GeeTeeTimeScheduleResponse)(nil),    // 10: tee_time.GeeTeeTimeScheduleResponse
	(*TeeTimeSchedule)(nil),               // 11: tee_time.TeeTimeSchedule
	(*InvalidateCacheRequest)(nil),        // 12: tee_time.InvalidateCacheRequest
	(*InvalidateCacheResponse)(nil),       // 13: tee_time.InvalidateCacheResponse
	(*TeeTime)(nil),                       // 14: tee_time.TeeTime
}
var file_protobufs_tee_time_tee_time_proto_depIdxs = []int32{
	2,  // 0: tee_time.GetTeeTimeOverridesResponse.overrides:type_name -> tee_time.TeeTimeOverride
	14, // 1: tee_time.GetTeeTimeResponse.teetime:type_name -> tee_time.TeeTime
	14, // 2: tee_time.GetTeeTimesResponse.teetimes:type_name -> tee_time.TeeTime
	11, // 3: tee_time.GeeTeeTimeScheduleResponse.schedule:type_name -> tee_time.TeeTimeSchedule
	5,  // 4: tee_time.TeeTimeService.GetTeeTimeByDateTime:input_type -> tee_time.GetTeeTimeDateRequest
	6,  // 5: tee_time.TeeTimeService.GetTeeTimes:input_type -> tee_time.GetTeeTimesRequest
	9,  // 6: tee_time.TeeTimeService.GetTeeTimeSchedules:input_type -> tee_time.GetTeeTimeScheduleRequest
	3,  // 7: tee_time.TeeTimeService.CreateTeeTimeSchedule:input_type -> tee_time.CreateTeeTimeScheduleRequest
	0,  // 8: tee_time.TeeTimeService.GetTeeTimeOverrides:input_type -> tee_time.GetTeeTimeOverridesRequest
	12, // 9: tee_time.TeeTimeService.InvalidateCache:input_type -> tee_time.InvalidateCacheRequest
	7,  // 10: tee_time.TeeTimeService.GetTeeTimeByDateTime:output_type -> tee_time.GetTeeTimeResponse
	8,  // 11: tee_time.TeeTimeService.GetTeeTimes:output_type -> tee_time.GetTeeTimesResponse
	10, // 12: tee_time.TeeTimeService.GetTeeTimeSchedules:output_type -> tee_time.GeeTeeTimeScheduleResponse
	4,  // 13: tee_time.TeeTimeService.CreateTeeTimeSchedule:output_type -> tee_time.CreateTeeTimeScheduleResponse
	0,  // 14: tee_time.TeeTimeService.GetTeeTimeOverrides:output_type -> tee_time.GetTeeTimeOverridesRequest
	13, // 15: tee_time.TeeTimeService.InvalidateCache:output_type -> tee_time.InvalidateCacheResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_protobufs_tee_time_tee_time_proto_init() }
func file_protobufs_tee_time_tee_time_proto_init() {
	if File_protobufs_tee_time_tee_time_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobufs_tee_time_tee_time_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeeTimeOverridesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobufs_tee_time_tee_time_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeeTimeOverridesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobufs_tee_time_tee_time_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeeTimeOverride); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobufs_tee_time_tee_time_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeeTimeScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobufs_tee_time_tee_time_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeeTimeScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobufs_tee_time_tee_time_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeeTimeDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobufs_tee_time_tee_time_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeeTimesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobufs_tee_time_tee_time_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeeTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobufs_tee_time_tee_time_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeeTimesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobufs_tee_time_tee_time_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeeTimeScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobufs_tee_time_tee_time_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeeTeeTimeScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobufs_tee_time_tee_time_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeeTimeSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobufs_tee_time_tee_time_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidateCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobufs_tee_time_tee_time_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidateCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobufs_tee_time_tee_time_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeeTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobufs_tee_time_tee_time_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobufs_tee_time_tee_time_proto_goTypes,
		DependencyIndexes: file_protobufs_tee_time_tee_time_proto_depIdxs,
		MessageInfos:      file_protobufs_tee_time_tee_time_proto_msgTypes,
	}.Build()
	File_protobufs_tee_time_tee_time_proto = out.File
	file_protobufs_tee_time_tee_time_proto_rawDesc = nil
	file_protobufs_tee_time_tee_time_proto_goTypes = nil
	file_protobufs_tee_time_tee_time_proto_depIdxs = nil
}
